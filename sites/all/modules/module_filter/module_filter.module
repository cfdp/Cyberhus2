<?php
// $Id: module_filter.module,v 1.2.2.8 2009/01/16 19:02:24 greenskin Exp $

/**
 * @file
 * This is the file description for Module Filter module.
 *
 * In this more verbose, multi-line description, you can specify what this
 * file does exactly. Make sure to wrap your documentation in column 78 so
 * that the file can be displayed nicely in default-sized consoles.
 *
 * Code by greenSkin
 */

/*******************************************************************************
 * Hook Functions (Drupal)
 ******************************************************************************/

/**
 * Implementation of hook_perm().
 */
function module_filter_perm() {
  return array('administer module filter');
}

/**
 * Implementation of hook_menu().
 */
function module_filter_menu() {
  $items['admin/settings/module_filter'] = array(
    'title' => 'Module filter',
    'access arguments' => array('administer module filter'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('module_filter_settings')
  );
  $items['module/autocomplete'] = array(
    'access arguments' => array('administer site configuration'),
    'page callback' => 'module_filter_autocomplete',
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Implementation of hook_form_alter().
 */
function module_filter_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'system_modules' && !isset($form['confirm'])) {
    $form['module_filter'] = array(
      '#type' => 'textfield',
      '#title' => t('Filter list'),
    );
    if (variable_get('module_filter_autocomplete', 0)) {
      $form['module_filter']['#autocomplete_path'] = 'module/autocomplete';
    }
    $form['#theme'] = 'module_filter_system_modules';
  }
}

/**
 * Implementation of hook_theme().
 */
function module_filter_theme() {
  return array(
    'module_filter_system_modules' => array(
      'arguments' => array('form' => NULL)
    ),
    'module_filter_system_modules_tabs' => array(
      'arguments' => array('form' => NULL)
    )
  );
}

/*******************************************************************************
 * Callback Functions, Forms, and Tables
 ******************************************************************************/

/**
 * Settings form for module filter.
 */
function module_filter_settings() {
  $form['module_filter_autocomplete'] = array(
    '#type' => 'checkbox',
    '#title' => t('Autocomplete'),
    '#description' => t('Enable this to provide autocomplete suggestions of existing module names in the module filter textfield. Currently only works if tabs are disabled below.'),
    '#default_value' => variable_get('module_filter_autocomplete', 0)
  );
  $form['module_filter_tabs'] = array(
    '#type' => 'checkbox',
    '#title' => t('Tabs'),
    '#description' => t('Themes module list into tabs.'),
    '#default_value' => variable_get('module_filter_tabs', 0)
  );
  return system_settings_form($form);
}

function module_filter_autocomplete($string) {
  $files = module_rebuild_cache();
  $matches = array();
  $count = 1;
  foreach (module_rebuild_cache() as $id => $module) {
    if ($count > 10) {
      break;
    }

    $name = $module->info['name'];
    if (ereg(strtolower($string), strtolower($name)) && strtolower($string) != strtolower($name)) {
      $matches[$name] = $name;
      $count++;
    }
  }
  print drupal_to_js($matches);
  exit();
}

/*******************************************************************************
 * Module and Helper Functions
 ******************************************************************************/



/*******************************************************************************
 * Theme Functions
 ******************************************************************************/

function theme_module_filter_system_modules($form) {
  if (isset($form['confirm'])) {
    return drupal_render($form);
  }

  $output = '';
  if (variable_get('module_filter_tabs', 0)) {
    drupal_add_css(drupal_get_path('module', 'module_filter') .'/module_filter_tab.css');
    drupal_add_js(drupal_get_path('module', 'module_filter') .'/module_filter_tab.js');
    $form['module_filter']['#size'] = 45;
    $output .= theme('module_filter_system_modules_tabs', $form);
  }
  else {
    drupal_add_js(drupal_get_path('module', 'module_filter') .'/module_filter.js');
    $form['module_filter']['#prefix'] = '<div id="module-filter-wrapper" style="display: none;">';
    $form['module_filter']['#suffix'] = '</div>';
    $output = drupal_render($form['module_filter']);
    $output .= theme('system_modules', $form);
  }
  return $output;
}

/**
 * Theme callback for the modules form.
 *
 * @param $form
 *   An associative array containing the structure of the form.
 * @ingroup themeable
 */
function theme_module_filter_system_modules_tabs($form) {
  if (isset($form['confirm'])) {
    return drupal_render($form);
  }

  // Individual table headers.
  $header = array();
  $header[] = array('data' => t('Enabled'), 'class' => 'checkbox');
  if (module_exists('throttle')) {
    $header[] = array('data' => t('Throttle'), 'class' => 'checkbox');
  }
  $header[] = t('Name');
  $header[] = t('Version');
  $header[] = t('Description');

  // Pull package information from module list and start grouping modules.
  $modules = $form['validation_modules']['#value'];
  foreach ($modules as $module) {
    if (!isset($module->info['package']) || !$module->info['package']) {
      $module->info['package'] = t('Other');
    }
    $packages[$module->info['package']][$module->name] = $module->info;
  }
  ksort($packages);

  // Display packages.
  $output = '';
  $rows = array();
  $tabs = array('all' => '<li class="active"><a id="all-tab" class="project-tab" href="">'. t('All') .'</a></li>');
  foreach ($packages as $package => $modules) {
    $id = strtolower($package);
    $id = ereg_replace('[^a-z ]', '', $id);
    $id = str_replace(' ', '-', $id);
    $id = str_replace('--', '-', $id);
    foreach ($modules as $key => $module) {
      $row = array();
      $description = drupal_render($form['description'][$key]);
      if (isset($form['status']['#incompatible_modules_core'][$key])) {
        unset($form['status'][$key]);
        $status = theme('image', 'misc/watchdog-error.png', t('incompatible'), t('Incompatible with this version of Drupal core'));
        $description .= '<div class="incompatible">'. t('This version is incompatible with the !core_version version of Drupal core.', array('!core_version' => VERSION)) .'</div>';
      }
      elseif (isset($form['status']['#incompatible_modules_php'][$key])) {
        unset($form['status'][$key]);
        $status = theme('image', 'misc/watchdog-error.png', t('incompatible'), t('Incompatible with this version of PHP'));
        $php_required = $form['status']['#incompatible_modules_php'][$key];
        if (substr_count($php_required, '.') < 2) {
          $php_required .= '.*';
        }
        $description .= '<div class="incompatible">'. t('This module requires PHP version @php_required and is incompatible with PHP version !php_version.', array('@php_required' => $php_required, '!php_version' => phpversion())) .'</div>';
      }
      else {
        $status = drupal_render($form['status'][$key]);
      }
      $row[] = array('data' => $status, 'class' => 'checkbox');
      if (module_exists('throttle')) {
        $row[] = array('data' => drupal_render($form['throttle'][$key]), 'class' => 'checkbox');
      }

      // Add labels only when there is also a checkbox.
      if (isset($form['status'][$key])) {
        $row[] = '<strong><label for="'. $form['status'][$key]['#id'] .'">'. drupal_render($form['name'][$key]) .'</label></strong>';
      }
      else {
        $row[] = '<strong>'. drupal_render($form['name'][$key]) .'</strong>';
      }

      $row[] = array('data' => drupal_render($form['version'][$key]), 'class' => 'version');
      $row[] = array('data' => $description, 'class' => 'description');
      $rows[$form['name'][$key]['#value']] = array(
        'data' => $row,
        'class' => $id .'-tab-content'
      );
    }
    $tabs[$id] = '<li><a id="'. $id .'-tab" class="project-tab" href="">'. $package .'</a></li>';
  }

  ksort($rows);
  $output .= '<div id="module-filter-left">';
  $output .= '<div id="module-filter-tabs"><ul>'. implode($tabs) .'</ul></div>';
  $output .= '<div id="module-filter-submit">'. drupal_render($form['buttons']) .'</div></div>';
  $output .= '<div id="module-filter-spacer"></div>';
  $output .= '<div id="module-filter-right"><div id="module-filter-squeeze">'. drupal_render($form['module_filter']);
  $output .= theme('table', $header, $rows, array('id' => 'projects')) .'</div></div>';
  $output .= '<div class="clear-block"></div>';

  $output .= drupal_render($form);
  return $output;
}
