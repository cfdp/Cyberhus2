<?php
// $Id$

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function cyberchatep_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#cyberchatep":
      $output = '<p>'.  t("Integrates the Cyberhus chat software") .'</p>';
      break;
  }
  return $output;
} // function madregnskab_help



/* here configuration for the settings page in the administration can be defined 
 * TODO - first time the module is installed the variables arent saved in the database - you have to go to the admin page to save it, before the right values are used*/
function cyberchatep_admin() {
  $form = array();
  $default_opening_hours = "Monday to friday, 14-19.";
  $form['cyberchatep_administration']['cyberchatep_opening_hours'] = array(
    '#type' => 'textfield',
    '#title' => t('Opening hours'),
    '#default_value' => variable_get('cyberchatep_opening_hours',$default_opening_hours),
    '#size' => 80,
    '#maxlength' => 200,
    '#description' => t("The opening hours of the chat"),
    '#required' => TRUE,
  );
  $default_closed_message = "The chat is closed.";
  $form['cyberchatep_administration']['cyberchatep_closed_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Chat is closed message'),
    '#default_value' => variable_get('cyberchatep_closed_message', $default_closed_message),
    '#size' => 80,
    '#maxlength' => 200,
    '#description' => t("The message to be shown to the users on the panel of the chat entry point if the chat is closed"),
    '#required' => TRUE,
  );
  $default_busy_message = "The chat is busy.";
  $form['cyberchatep_administration']['cyberchatep_busy_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Chat is busy message'),
    '#default_value' => variable_get('cyberchatep_busy_message', $default_busy_message),
    '#size' => 80,
    '#maxlength' => 200,
    '#description' => t("The message to be shown to the users  on the panel of the chat entry point if the chat is busy"),
    '#required' => TRUE,
  );
  $default_vacant_message = "The chat is vacant.";
  $form['cyberchatep_administration']['cyberchatep_vacant_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Chat is vacant message'),
    '#default_value' => variable_get('cyberchatep_vacant_message', $default_vacant_message),
    '#size' => 80,
    '#maxlength' => 200,
    '#description' => t("The message to be shown to the users on the panel of the chat entry point if the chat is vacant"),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/* Implementation of hook_menu */

function cyberchatep_menu() {

  $items = array();
  
  /* Menu item for administration*/
  $items['admin/settings/cyberchatep'] = array(
    'title' => 'Cyberhus chat entry point',
    'description' => 'Here the integration of the Cyberhus Chat can be configured.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cyberchatep_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
   );
   
  /* menu callback to check status of chat, called by chat_update.js*/
  $items['cyberchatep/returntext'] = array(
    'page callback' => 'cyberchatep_returntext',
    'access arguments' => array('access cyberchatep content'),
    'type' => MENU_CALLBACK,
   );
  
  return $items;
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the cyberhat_entrypoint module
*/
function cyberchatep_perm() {
  return array('access cyberchatep content', 'administer cyberchatep');
} // function madregnskab_perm()

/**
* Implementation of hook_block
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
* @param array $edit only for "save" operation
**/

function cyberchatep_block($op = 'list', $delta = 0, $edit = array()) {
  
  //we send the base url of the installation to the javascript to enable easy portability
  global $base_url;
  //send the baseurl to chat_update.js
  drupal_add_js(array('cyberchatep' => array('baseurl' => $base_url)), 'setting');

  drupal_add_js(drupal_get_path('module', 'cyberchatep') .'/js/chat_update.js');
  drupal_add_css(drupal_get_path('module', 'cyberchatep') .'/css/cyberchatep.css');
  
  $welcome_message = '';
  $login_message = '';
  switch ($op) {
    case 'list':
    	$blocks[0]['info'] = t('Cyberchat entry point');
      	return $blocks;
    case 'view':
		switch ($delta) {
			case 0:
				$block_content = '
				<div id="ccep">
					<div id="ccep_panel">
						<div id="ccep_content_wrapper">	
		                	<div id="ccep_desc">'.$welcome_message.'
					        </div>
							<div id="ccep_fallback">
								<p>If you are experiencing difficulties logging in the chat, you can use the link below to use the previous version of the chat!</p>
								<p>Sorry for the inconvenience!</p>
								<a href="http://chat.cybhus.dk/client_fallback.php">Log på</a>
							</div>
					    </div>

					</div> 	
										    
					<div id="ccep_tab">
			            <div id="ccep_button">
			                <span id="ccep_status">'.$login_message.'
			                </span>
			            </div>
			        </div>
		        </div>
				';

		      $blocks['subject'] = t('Cyberhus chat');
		      $blocks['content'] = $block_content;
		      return $blocks;

		}
  }
} // function cyberchatep_block

/**
* Called by JQuery - returns the right text according to the status of the chat
*/
function cyberchatep_returntext($oldstatus) {
	
  //here we check the status of the chat: vacant, closed or busy
  $status = cyberchatep_cachedstatus();

  //if the status has changed: get the array with the text for the chat slider panel
  if ($status != $oldstatus) {
  	$chattexts = cyberchatep_gettext();
  }
 
  $welcome_message = $chattexts['welcome_messages'];
  $login_message = $chattexts['login_messages'];
  
 switch ($status) {
 	//chat is vacant
  	case 2:
  	  $welcome_message = $welcome_message['vacant'];
  	  $login_message = $login_message['vacant'];
	  break;
	//chat is busy
  	case 1:
  	  $welcome_message = $welcome_message['busy'];
  	  $login_message = $login_message['busy'];
	  break;
	//chat is closed
   	case 0:
  	  $welcome_message = $welcome_message['closed'];
  	  $login_message = $login_message['closed'];
	  break;
    case -1:
      $welcome_message = t("There is a problem with the connection to the chat server");
      $login_message = t("There is a problem with the connection to the chat server");
    break;
  }
  
  //the json object is returned to the javascript
  if (!empty($_POST['js'])) {

  	  drupal_json(array(
	    'welcome_message' => $welcome_message,
	    'login_message' => $login_message,
	    'status' => $status
		)
	  );
	  //
	  exit();
  }

  //it was a non-javascript-call - fallback - give the user explanation of what happened
  /* TODO */ 

  
} // function cyberchatep_return_status


/*this function returns an array with the texts to be shown in the chatep-panel
 * TODO we ought to make this function themable */
function cyberchatep_gettext(){
	
  //static $chatep_texts;
  static $chatep_texts;
  	
	$drupal_module_basepath =  base_path().drupal_get_path('module', 'cyberchatep');
  	$welcome_messages = array();
	$login_messages = array();
	
	$opening_hours = variable_get("cyberchatep_opening_hours", "hej");
	$welcome_messages['vacant'] = variable_get("cyberchatep_vacant_message", "hey ");
	$welcome_messages['busy'] = variable_get("cyberchatep_busy_message", "hey");
	$welcome_messages['closed'] = variable_get("cyberchatep_closed_message", "hey").$opening_hours;
	
	/*$welcome_messages['vacant'] = '<div id="ccep_desc">'.$welcome_messages['vacant']."</div>";
	$welcome_messages['busy'] = '<div id="ccep_desc">'.$welcome_messages['busy']."</div>";
	$welcome_messages['closed'] = '<div id="ccep_desc">'.$welcome_messages['closed']."</div>";*/
	
	//we add the form to the slide panel
	$welcome_messages['vacant'] .='
		<!-- start the chat is vacant section-->

            	<div id="ccep_form_wrapper">
            		<form id="ccep_form" name="ccep_login" action="'.$drupal_module_basepath.'/includes/curl.php" method="post">
            			<ul>
            				<li>
            					<input type="text" name="guest_navn" value="Anonym" />
            				</li>
            				<li>
            					<input type="text" name="guest_age" value="Alder" />
            				</li>
            				<li>
            					<div class="radio_btn"><span>Kvinde</span><input type="radio" name="guest_sex" value="female" /></div>
            					<div class="radio_btn"><span>Mand</span><input type="radio" name="guest_sex" value="male" /></div>
            				</li>
            				<li>
            					<input type="button" id="l" value="Log på" />
            					<input type="hidden" name="action" value="openchat" />
            				</li>
            			</ul>
            		</form>
            	</div>';
				
	$welcome_messages['busy'] .= "<div id=\"ccep_video_wrapper\"><iframe width=\"280\" height=\"175\" src=\"http://www.youtube.com/embed/m_tSm1ewGVA\" frameborder=\"0\" allowfullscreen></iframe></div>";
	$welcome_messages['closed'] .= "<div id=\"ccep_video_wrapper\"><iframe width=\"280\" height=\"175\" src=\"http://www.youtube.com/embed/m_tSm1ewGVA\" frameborder=\"0\" allowfullscreen></iframe></div>";
	
	$login_messages['vacant'] ="
		<img src=".$drupal_module_basepath."/images/ccep_open.png width=233 height=60 />";

	$login_messages['busy'] ="
		<img src=".$drupal_module_basepath."/images/ccep_busy.png width=233 height=60 />";

	$login_messages['closed'] ="
		<img src=".$drupal_module_basepath."/images/ccep_closed.png width=233 height=60 />";

	$chatep_texts['welcome_messages'] = $welcome_messages;
	$chatep_texts['login_messages'] = $login_messages;
	return $chatep_texts;
}

/*makes a request to the chat server and returns a value, where 2 = "vacant", 1= "busy" or 0 = "closed" */
function cyberchatep_chatserverrequest() {

  //the @ before the function suppresses error warnings
  $status = @file_get_contents('http://chat.cybhus.dk/chat_status.php');
  
  //error handling
	if ($status == FALSE) {
		//theres a problem opening the stream
		$status = -1;
	}
	else if ($status == (0 || 1 || 2)) {
	  //the request went well
	}
  else {
    //unknown error
    $status = -1;
  };
	
	/* for debugging */
	$status = 2;
	return $status;
}

function cyberchatep_cachedstatus() {
						
	/*if more than n seconds have passed, its time to check the chat server status and insert the value in the database*/
	$timer = db_result(db_query('SELECT (timer) FROM {cyberchatep_chatstatus} WHERE id = %d',1));	
	
	//the number of seconds that should pass between each check for a new status from the chat server
	$n = 5;
			
	if ((time()-$n) > $timer) {
		$status = cyberchatep_chatserverrequest();
		$table = "cyberchatep_chatstatus";
		$record = new stdClass();
		$record->id = 1;
		$record->status = $status;
		$record->timer = time();
		drupal_write_record($table, $record, 'id');

	}
	//pass the cached status
  else	{
		$status = db_result(db_query('SELECT (status) FROM {cyberchatep_chatstatus} WHERE id = %d',1));
	}
	return $status;
}
